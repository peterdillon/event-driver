{
  "version": 3,
  "sources": ["../../../../../../node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-cdk-resize-observer.mjs", "../../../../../../node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-resizable.mjs", "../../../../../../node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-splitter.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, booleanAttribute, Input, Output, Directive, NgModule } from '@angular/core';\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/**\n * Factory that creates a new ResizeObserver and allows us to stub it out in unit tests.\n */\nclass NzResizeObserverFactory {\n  create(callback) {\n    return typeof ResizeObserver === 'undefined' ? null : new ResizeObserver(callback);\n  }\n  static ɵfac = function NzResizeObserverFactory_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzResizeObserverFactory)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NzResizeObserverFactory,\n    factory: NzResizeObserverFactory.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzResizeObserverFactory, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/** An injectable service that allows watching elements for changes to their content. */\nclass NzResizeObserver {\n  nzResizeObserverFactory;\n  /** Keeps track of the existing ResizeObservers so they can be reused. */\n  observedElements = new Map();\n  constructor(nzResizeObserverFactory) {\n    this.nzResizeObserverFactory = nzResizeObserverFactory;\n  }\n  ngOnDestroy() {\n    this.observedElements.forEach((_, element) => this.cleanupObserver(element));\n  }\n  observe(elementOrRef) {\n    const element = coerceElement(elementOrRef);\n    return new Observable(observer => {\n      const stream = this.observeElement(element);\n      const subscription = stream.subscribe(observer);\n      return () => {\n        subscription.unsubscribe();\n        this.unobserveElement(element);\n      };\n    });\n  }\n  /**\n   * Observes the given element by using the existing ResizeObserver if available, or creating a\n   * new one if not.\n   */\n  observeElement(element) {\n    if (!this.observedElements.has(element)) {\n      const stream = new Subject();\n      const observer = this.nzResizeObserverFactory.create(mutations => stream.next(mutations));\n      if (observer) {\n        observer.observe(element);\n      }\n      this.observedElements.set(element, {\n        observer,\n        stream,\n        count: 1\n      });\n    } else {\n      this.observedElements.get(element).count++;\n    }\n    return this.observedElements.get(element).stream;\n  }\n  /**\n   * Un-observes the given element and cleans up the underlying ResizeObserver if nobody else is\n   * observing this element.\n   */\n  unobserveElement(element) {\n    if (this.observedElements.has(element)) {\n      this.observedElements.get(element).count--;\n      if (!this.observedElements.get(element).count) {\n        this.cleanupObserver(element);\n      }\n    }\n  }\n  /** Clean up the underlying ResizeObserver for the specified element. */\n  cleanupObserver(element) {\n    if (this.observedElements.has(element)) {\n      const {\n        observer,\n        stream\n      } = this.observedElements.get(element);\n      if (observer) {\n        observer.disconnect();\n      }\n      stream.complete();\n      this.observedElements.delete(element);\n    }\n  }\n  static ɵfac = function NzResizeObserver_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzResizeObserver)(i0.ɵɵinject(NzResizeObserverFactory));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NzResizeObserver,\n    factory: NzResizeObserver.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzResizeObserver, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: NzResizeObserverFactory\n  }], null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzResizeObserverDirective {\n  nzResizeObserver;\n  elementRef;\n  nzResizeObserve = new EventEmitter();\n  nzResizeObserverDisabled = false;\n  currentSubscription = null;\n  subscribe() {\n    this.unsubscribe();\n    this.currentSubscription = this.nzResizeObserver.observe(this.elementRef).subscribe(this.nzResizeObserve);\n  }\n  unsubscribe() {\n    this.currentSubscription?.unsubscribe();\n  }\n  constructor(nzResizeObserver, elementRef) {\n    this.nzResizeObserver = nzResizeObserver;\n    this.elementRef = elementRef;\n  }\n  ngAfterContentInit() {\n    if (!this.currentSubscription && !this.nzResizeObserverDisabled) {\n      this.subscribe();\n    }\n  }\n  ngOnDestroy() {\n    this.unsubscribe();\n  }\n  ngOnChanges(changes) {\n    const {\n      nzResizeObserve\n    } = changes;\n    if (nzResizeObserve) {\n      if (this.nzResizeObserverDisabled) {\n        this.unsubscribe();\n      } else {\n        this.subscribe();\n      }\n    }\n  }\n  static ɵfac = function NzResizeObserverDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzResizeObserverDirective)(i0.ɵɵdirectiveInject(NzResizeObserver), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NzResizeObserverDirective,\n    selectors: [[\"\", \"nzResizeObserver\", \"\"]],\n    inputs: {\n      nzResizeObserverDisabled: [2, \"nzResizeObserverDisabled\", \"nzResizeObserverDisabled\", booleanAttribute]\n    },\n    outputs: {\n      nzResizeObserve: \"nzResizeObserve\"\n    },\n    features: [i0.ɵɵProvidersFeature([NzResizeObserverFactory]), i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzResizeObserverDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nzResizeObserver]',\n      providers: [NzResizeObserverFactory]\n    }]\n  }], () => [{\n    type: NzResizeObserver\n  }, {\n    type: i0.ElementRef\n  }], {\n    nzResizeObserve: [{\n      type: Output\n    }],\n    nzResizeObserverDisabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzResizeObserverModule {\n  static ɵfac = function NzResizeObserverModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzResizeObserverModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NzResizeObserverModule,\n    imports: [NzResizeObserverDirective],\n    exports: [NzResizeObserverDirective]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzResizeObserverModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NzResizeObserverDirective],\n      exports: [NzResizeObserverDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzResizeObserver, NzResizeObserverDirective, NzResizeObserverFactory, NzResizeObserverModule };\n", "import * as i0 from '@angular/core';\nimport { inject, Injectable, EventEmitter, booleanAttribute, numberAttribute, Output, Input, Directive, HostListener, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { takeUntil, filter } from 'rxjs/operators';\nimport * as i3 from 'ng-zorro-antd/core/services';\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport { isTouchEvent, ensureInBounds, fromEventOutsideAngular } from 'ng-zorro-antd/core/util';\nimport { DOCUMENT } from '@angular/common';\nimport { Subject, merge } from 'rxjs';\nimport * as i2 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst _c0 = [\"*\"];\nfunction NzResizeHandlesComponent_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-resize-handle\", 0);\n  }\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"nzDirection\", option_r1.direction)(\"nzCursorType\", option_r1.cursorType);\n  }\n}\nfunction getEventWithPoint(event) {\n  return isTouchEvent(event) ? event.touches[0] || event.changedTouches[0] : event;\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzResizableService {\n  ngZone;\n  document = inject(DOCUMENT);\n  listeners = new Map();\n  /**\n   * The `OutsideAngular` prefix means that the subject will emit events outside of the Angular zone,\n   * so that becomes a bit more descriptive for those who'll maintain the code in the future:\n   * ```ts\n   * nzResizableService.handleMouseDownOutsideAngular$.subscribe(event => {\n   *   console.log(Zone.current); // <root>\n   *   console.log(NgZone.isInAngularZone()); // false\n   * });\n   * ```\n   */\n  handleMouseDownOutsideAngular$ = new Subject();\n  documentMouseUpOutsideAngular$ = new Subject();\n  documentMouseMoveOutsideAngular$ = new Subject();\n  mouseEnteredOutsideAngular$ = new Subject();\n  constructor(ngZone) {\n    this.ngZone = ngZone;\n  }\n  startResizing(event) {\n    const _isTouchEvent = isTouchEvent(event);\n    this.clearListeners();\n    const moveEvent = _isTouchEvent ? 'touchmove' : 'mousemove';\n    const upEvent = _isTouchEvent ? 'touchend' : 'mouseup';\n    const moveEventHandler = e => {\n      this.documentMouseMoveOutsideAngular$.next(e);\n    };\n    const upEventHandler = e => {\n      this.documentMouseUpOutsideAngular$.next(e);\n      this.clearListeners();\n    };\n    this.listeners.set(moveEvent, moveEventHandler);\n    this.listeners.set(upEvent, upEventHandler);\n    this.ngZone.runOutsideAngular(() => {\n      this.listeners.forEach((handler, name) => {\n        this.document.addEventListener(name, handler);\n      });\n    });\n  }\n  clearListeners() {\n    this.listeners.forEach((handler, name) => {\n      this.document.removeEventListener(name, handler);\n    });\n    this.listeners.clear();\n  }\n  ngOnDestroy() {\n    this.handleMouseDownOutsideAngular$.complete();\n    this.documentMouseUpOutsideAngular$.complete();\n    this.documentMouseMoveOutsideAngular$.complete();\n    this.mouseEnteredOutsideAngular$.complete();\n    this.clearListeners();\n  }\n  static ɵfac = function NzResizableService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzResizableService)(i0.ɵɵinject(i0.NgZone));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NzResizableService,\n    factory: NzResizableService.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzResizableService, [{\n    type: Injectable\n  }], () => [{\n    type: i0.NgZone\n  }], null);\n})();\nclass NzResizableDirective {\n  elementRef;\n  renderer;\n  nzResizableService;\n  platform;\n  ngZone;\n  destroy$;\n  nzBounds = 'parent';\n  nzMaxHeight;\n  nzMaxWidth;\n  nzMinHeight = 40;\n  nzMinWidth = 40;\n  nzGridColumnCount = -1;\n  nzMaxColumn = -1;\n  nzMinColumn = -1;\n  nzLockAspectRatio = false;\n  nzPreview = false;\n  nzDisabled = false;\n  nzResize = new EventEmitter();\n  nzResizeEnd = new EventEmitter();\n  nzResizeStart = new EventEmitter();\n  resizing = false;\n  elRect;\n  currentHandleEvent = null;\n  ghostElement = null;\n  el;\n  sizeCache = null;\n  constructor(elementRef, renderer, nzResizableService, platform, ngZone, destroy$) {\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.nzResizableService = nzResizableService;\n    this.platform = platform;\n    this.ngZone = ngZone;\n    this.destroy$ = destroy$;\n    this.nzResizableService.handleMouseDownOutsideAngular$.pipe(takeUntil(this.destroy$)).subscribe(event => {\n      if (this.nzDisabled) {\n        return;\n      }\n      this.resizing = true;\n      this.nzResizableService.startResizing(event.mouseEvent);\n      this.currentHandleEvent = event;\n      if (this.nzResizeStart.observers.length) {\n        this.ngZone.run(() => this.nzResizeStart.emit({\n          mouseEvent: event.mouseEvent,\n          direction: event.direction\n        }));\n      }\n      this.elRect = this.el.getBoundingClientRect();\n    });\n    this.nzResizableService.documentMouseUpOutsideAngular$.pipe(takeUntil(this.destroy$), filter(Boolean)).subscribe(event => {\n      if (this.resizing) {\n        this.resizing = false;\n        this.nzResizableService.documentMouseUpOutsideAngular$.next(null);\n        this.endResize(event);\n      }\n    });\n    this.nzResizableService.documentMouseMoveOutsideAngular$.pipe(takeUntil(this.destroy$)).subscribe(event => {\n      if (this.resizing) {\n        this.resize(event);\n      }\n    });\n  }\n  setPosition() {\n    const position = getComputedStyle(this.el).position;\n    if (position === 'static' || !position) {\n      this.renderer.setStyle(this.el, 'position', 'relative');\n    }\n  }\n  calcSize(width, height, ratio) {\n    let newWidth;\n    let newHeight;\n    let maxWidth;\n    let maxHeight;\n    let col = 0;\n    let spanWidth = 0;\n    let minWidth = this.nzMinWidth;\n    let boundWidth = Infinity;\n    let boundHeight = Infinity;\n    if (this.nzBounds === 'parent') {\n      const parent = this.renderer.parentNode(this.el);\n      if (parent instanceof HTMLElement) {\n        const parentRect = parent.getBoundingClientRect();\n        boundWidth = parentRect.width;\n        boundHeight = parentRect.height;\n      }\n    } else if (this.nzBounds === 'window') {\n      if (typeof window !== 'undefined') {\n        boundWidth = window.innerWidth;\n        boundHeight = window.innerHeight;\n      }\n    } else if (this.nzBounds && this.nzBounds.nativeElement && this.nzBounds.nativeElement instanceof HTMLElement) {\n      const boundsRect = this.nzBounds.nativeElement.getBoundingClientRect();\n      boundWidth = boundsRect.width;\n      boundHeight = boundsRect.height;\n    }\n    maxWidth = ensureInBounds(this.nzMaxWidth, boundWidth);\n    // eslint-disable-next-line prefer-const\n    maxHeight = ensureInBounds(this.nzMaxHeight, boundHeight);\n    if (this.nzGridColumnCount !== -1) {\n      spanWidth = maxWidth / this.nzGridColumnCount;\n      minWidth = this.nzMinColumn !== -1 ? spanWidth * this.nzMinColumn : minWidth;\n      maxWidth = this.nzMaxColumn !== -1 ? spanWidth * this.nzMaxColumn : maxWidth;\n    }\n    if (ratio !== -1) {\n      if (/(left|right)/i.test(this.currentHandleEvent.direction)) {\n        newWidth = Math.min(Math.max(width, minWidth), maxWidth);\n        newHeight = Math.min(Math.max(newWidth / ratio, this.nzMinHeight), maxHeight);\n        if (newHeight >= maxHeight || newHeight <= this.nzMinHeight) {\n          newWidth = Math.min(Math.max(newHeight * ratio, minWidth), maxWidth);\n        }\n      } else {\n        newHeight = Math.min(Math.max(height, this.nzMinHeight), maxHeight);\n        newWidth = Math.min(Math.max(newHeight * ratio, minWidth), maxWidth);\n        if (newWidth >= maxWidth || newWidth <= minWidth) {\n          newHeight = Math.min(Math.max(newWidth / ratio, this.nzMinHeight), maxHeight);\n        }\n      }\n    } else {\n      newWidth = Math.min(Math.max(width, minWidth), maxWidth);\n      newHeight = Math.min(Math.max(height, this.nzMinHeight), maxHeight);\n    }\n    if (this.nzGridColumnCount !== -1) {\n      col = Math.round(newWidth / spanWidth);\n      newWidth = col * spanWidth;\n    }\n    return {\n      col,\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  resize(event) {\n    const elRect = this.elRect;\n    const resizeEvent = getEventWithPoint(event);\n    const handleEvent = getEventWithPoint(this.currentHandleEvent.mouseEvent);\n    let width = elRect.width;\n    let height = elRect.height;\n    const ratio = this.nzLockAspectRatio ? width / height : -1;\n    switch (this.currentHandleEvent.direction) {\n      case 'bottomRight':\n        width = resizeEvent.clientX - elRect.left;\n        height = resizeEvent.clientY - elRect.top;\n        break;\n      case 'bottomLeft':\n        width = elRect.width + handleEvent.clientX - resizeEvent.clientX;\n        height = resizeEvent.clientY - elRect.top;\n        break;\n      case 'topRight':\n        width = resizeEvent.clientX - elRect.left;\n        height = elRect.height + handleEvent.clientY - resizeEvent.clientY;\n        break;\n      case 'topLeft':\n        width = elRect.width + handleEvent.clientX - resizeEvent.clientX;\n        height = elRect.height + handleEvent.clientY - resizeEvent.clientY;\n        break;\n      case 'top':\n        height = elRect.height + handleEvent.clientY - resizeEvent.clientY;\n        break;\n      case 'right':\n        width = resizeEvent.clientX - elRect.left;\n        break;\n      case 'bottom':\n        height = resizeEvent.clientY - elRect.top;\n        break;\n      case 'left':\n        width = elRect.width + handleEvent.clientX - resizeEvent.clientX;\n    }\n    const size = this.calcSize(width, height, ratio);\n    this.sizeCache = {\n      ...size\n    };\n    // Re-enter the Angular zone and run the change detection only if there're any `nzResize` listeners,\n    // e.g.: `<div nz-resizable (nzResize)=\"...\"></div>`.\n    if (this.nzResize.observers.length) {\n      this.ngZone.run(() => {\n        this.nzResize.emit({\n          ...size,\n          mouseEvent: event,\n          direction: this.currentHandleEvent.direction\n        });\n      });\n    }\n    if (this.nzPreview) {\n      this.previewResize(size);\n    }\n  }\n  endResize(event) {\n    this.removeGhostElement();\n    const size = this.sizeCache ? {\n      ...this.sizeCache\n    } : {\n      width: this.elRect.width,\n      height: this.elRect.height\n    };\n    // Re-enter the Angular zone and run the change detection only if there're any `nzResizeEnd` listeners,\n    // e.g.: `<div nz-resizable (nzResizeEnd)=\"...\"></div>`.\n    if (this.nzResizeEnd.observers.length) {\n      this.ngZone.run(() => {\n        this.nzResizeEnd.emit({\n          ...size,\n          mouseEvent: event,\n          direction: this.currentHandleEvent.direction\n        });\n      });\n    }\n    this.sizeCache = null;\n    this.currentHandleEvent = null;\n  }\n  previewResize({\n    width,\n    height\n  }) {\n    this.createGhostElement();\n    this.renderer.setStyle(this.ghostElement, 'width', `${width}px`);\n    this.renderer.setStyle(this.ghostElement, 'height', `${height}px`);\n  }\n  createGhostElement() {\n    if (!this.ghostElement) {\n      this.ghostElement = this.renderer.createElement('div');\n      this.renderer.setAttribute(this.ghostElement, 'class', 'nz-resizable-preview');\n    }\n    this.renderer.appendChild(this.el, this.ghostElement);\n  }\n  removeGhostElement() {\n    if (this.ghostElement) {\n      this.renderer.removeChild(this.el, this.ghostElement);\n    }\n  }\n  ngAfterViewInit() {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    this.el = this.elementRef.nativeElement;\n    this.setPosition();\n    fromEventOutsideAngular(this.el, 'mouseenter').pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.nzResizableService.mouseEnteredOutsideAngular$.next(true);\n    });\n    fromEventOutsideAngular(this.el, 'mouseleave').pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.nzResizableService.mouseEnteredOutsideAngular$.next(false);\n    });\n  }\n  ngOnDestroy() {\n    this.ghostElement = null;\n    this.sizeCache = null;\n  }\n  static ɵfac = function NzResizableDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzResizableDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(NzResizableService), i0.ɵɵdirectiveInject(i2.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.NzDestroyService));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NzResizableDirective,\n    selectors: [[\"\", \"nz-resizable\", \"\"]],\n    hostAttrs: [1, \"nz-resizable\"],\n    hostVars: 4,\n    hostBindings: function NzResizableDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"nz-resizable-resizing\", ctx.resizing)(\"nz-resizable-disabled\", ctx.nzDisabled);\n      }\n    },\n    inputs: {\n      nzBounds: \"nzBounds\",\n      nzMaxHeight: \"nzMaxHeight\",\n      nzMaxWidth: \"nzMaxWidth\",\n      nzMinHeight: [2, \"nzMinHeight\", \"nzMinHeight\", numberAttribute],\n      nzMinWidth: [2, \"nzMinWidth\", \"nzMinWidth\", numberAttribute],\n      nzGridColumnCount: [2, \"nzGridColumnCount\", \"nzGridColumnCount\", numberAttribute],\n      nzMaxColumn: [2, \"nzMaxColumn\", \"nzMaxColumn\", numberAttribute],\n      nzMinColumn: [2, \"nzMinColumn\", \"nzMinColumn\", numberAttribute],\n      nzLockAspectRatio: [2, \"nzLockAspectRatio\", \"nzLockAspectRatio\", booleanAttribute],\n      nzPreview: [2, \"nzPreview\", \"nzPreview\", booleanAttribute],\n      nzDisabled: [2, \"nzDisabled\", \"nzDisabled\", booleanAttribute]\n    },\n    outputs: {\n      nzResize: \"nzResize\",\n      nzResizeEnd: \"nzResizeEnd\",\n      nzResizeStart: \"nzResizeStart\"\n    },\n    exportAs: [\"nzResizable\"],\n    features: [i0.ɵɵProvidersFeature([NzResizableService, NzDestroyService])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzResizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-resizable]',\n      exportAs: 'nzResizable',\n      providers: [NzResizableService, NzDestroyService],\n      host: {\n        class: 'nz-resizable',\n        '[class.nz-resizable-resizing]': 'resizing',\n        '[class.nz-resizable-disabled]': 'nzDisabled'\n      }\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: NzResizableService\n  }, {\n    type: i2.Platform\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i3.NzDestroyService\n  }], {\n    nzBounds: [{\n      type: Input\n    }],\n    nzMaxHeight: [{\n      type: Input\n    }],\n    nzMaxWidth: [{\n      type: Input\n    }],\n    nzMinHeight: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    nzMinWidth: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    nzGridColumnCount: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    nzMaxColumn: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    nzMinColumn: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    nzLockAspectRatio: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzPreview: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzDisabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzResize: [{\n      type: Output\n    }],\n    nzResizeEnd: [{\n      type: Output\n    }],\n    nzResizeStart: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzResizeHandleMouseDownEvent {\n  direction;\n  mouseEvent;\n  constructor(direction, mouseEvent) {\n    this.direction = direction;\n    this.mouseEvent = mouseEvent;\n  }\n}\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true\n});\nclass NzResizeHandleComponent {\n  nzResizableService;\n  renderer;\n  host;\n  destroy$;\n  nzDirection = 'bottomRight';\n  nzCursorType = 'window';\n  nzMouseDown = new EventEmitter();\n  constructor(nzResizableService, renderer, host, destroy$) {\n    this.nzResizableService = nzResizableService;\n    this.renderer = renderer;\n    this.host = host;\n    this.destroy$ = destroy$;\n  }\n  ngOnInit() {\n    this.nzResizableService.mouseEnteredOutsideAngular$.pipe(takeUntil(this.destroy$)).subscribe(entered => {\n      if (entered) {\n        this.renderer.addClass(this.host.nativeElement, 'nz-resizable-handle-box-hover');\n      } else {\n        this.renderer.removeClass(this.host.nativeElement, 'nz-resizable-handle-box-hover');\n      }\n    });\n    // Note: since Chrome 56 defaults document level `touchstart` listener to passive.\n    // The element `touchstart` listener is not passive by default\n    // We never call `preventDefault()` on it, so we're safe making it passive too.\n    merge(fromEventOutsideAngular(this.host.nativeElement, 'mousedown', passiveEventListenerOptions), fromEventOutsideAngular(this.host.nativeElement, 'touchstart', passiveEventListenerOptions)).pipe(takeUntil(this.destroy$)).subscribe(event => {\n      this.nzResizableService.handleMouseDownOutsideAngular$.next(new NzResizeHandleMouseDownEvent(this.nzDirection, event));\n    });\n  }\n  onPointerDown(event) {\n    event.target.setPointerCapture(event.pointerId);\n  }\n  onPointerUp(event) {\n    event.target.releasePointerCapture(event.pointerId);\n  }\n  static ɵfac = function NzResizeHandleComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzResizeHandleComponent)(i0.ɵɵdirectiveInject(NzResizableService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.NzDestroyService));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NzResizeHandleComponent,\n    selectors: [[\"nz-resize-handle\"], [\"\", \"nz-resize-handle\", \"\"]],\n    hostAttrs: [1, \"nz-resizable-handle\"],\n    hostVars: 20,\n    hostBindings: function NzResizeHandleComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"pointerdown\", function NzResizeHandleComponent_pointerdown_HostBindingHandler($event) {\n          return ctx.onPointerDown($event);\n        })(\"pointerup\", function NzResizeHandleComponent_pointerup_HostBindingHandler($event) {\n          return ctx.onPointerUp($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"nz-resizable-handle-top\", ctx.nzDirection === \"top\")(\"nz-resizable-handle-right\", ctx.nzDirection === \"right\")(\"nz-resizable-handle-bottom\", ctx.nzDirection === \"bottom\")(\"nz-resizable-handle-left\", ctx.nzDirection === \"left\")(\"nz-resizable-handle-topRight\", ctx.nzDirection === \"topRight\")(\"nz-resizable-handle-bottomRight\", ctx.nzDirection === \"bottomRight\")(\"nz-resizable-handle-bottomLeft\", ctx.nzDirection === \"bottomLeft\")(\"nz-resizable-handle-topLeft\", ctx.nzDirection === \"topLeft\")(\"nz-resizable-handle-cursor-type-grid\", ctx.nzCursorType === \"grid\")(\"nz-resizable-handle-cursor-type-window\", ctx.nzCursorType === \"window\");\n      }\n    },\n    inputs: {\n      nzDirection: \"nzDirection\",\n      nzCursorType: \"nzCursorType\"\n    },\n    outputs: {\n      nzMouseDown: \"nzMouseDown\"\n    },\n    exportAs: [\"nzResizeHandle\"],\n    features: [i0.ɵɵProvidersFeature([NzDestroyService])],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function NzResizeHandleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzResizeHandleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-resize-handle, [nz-resize-handle]',\n      exportAs: 'nzResizeHandle',\n      template: ` <ng-content></ng-content> `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        class: 'nz-resizable-handle',\n        '[class.nz-resizable-handle-top]': `nzDirection === 'top'`,\n        '[class.nz-resizable-handle-right]': `nzDirection === 'right'`,\n        '[class.nz-resizable-handle-bottom]': `nzDirection === 'bottom'`,\n        '[class.nz-resizable-handle-left]': `nzDirection === 'left'`,\n        '[class.nz-resizable-handle-topRight]': `nzDirection === 'topRight'`,\n        '[class.nz-resizable-handle-bottomRight]': `nzDirection === 'bottomRight'`,\n        '[class.nz-resizable-handle-bottomLeft]': `nzDirection === 'bottomLeft'`,\n        '[class.nz-resizable-handle-topLeft]': `nzDirection === 'topLeft'`,\n        '[class.nz-resizable-handle-cursor-type-grid]': `nzCursorType === 'grid'`,\n        '[class.nz-resizable-handle-cursor-type-window]': `nzCursorType === 'window'`\n      },\n      providers: [NzDestroyService]\n    }]\n  }], () => [{\n    type: NzResizableService\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i3.NzDestroyService\n  }], {\n    nzDirection: [{\n      type: Input\n    }],\n    nzCursorType: [{\n      type: Input\n    }],\n    nzMouseDown: [{\n      type: Output\n    }],\n    onPointerDown: [{\n      type: HostListener,\n      args: ['pointerdown', ['$event']]\n    }],\n    onPointerUp: [{\n      type: HostListener,\n      args: ['pointerup', ['$event']]\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst DEFAULT_RESIZE_DIRECTION = ['bottomRight', 'topRight', 'bottomLeft', 'topLeft', 'bottom', 'right', 'top', 'left'];\nfunction normalizeResizeHandleOptions(value) {\n  return value.map(val => {\n    if (typeof val === 'string') {\n      return {\n        direction: val,\n        cursorType: 'window'\n      };\n    }\n    return val;\n  });\n}\nclass NzResizeHandlesComponent {\n  nzDirections = DEFAULT_RESIZE_DIRECTION;\n  resizeHandleOptions = normalizeResizeHandleOptions(this.nzDirections);\n  ngOnChanges(changes) {\n    if (changes.nzDirections) {\n      this.resizeHandleOptions = normalizeResizeHandleOptions(changes.nzDirections.currentValue);\n    }\n  }\n  static ɵfac = function NzResizeHandlesComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzResizeHandlesComponent)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NzResizeHandlesComponent,\n    selectors: [[\"nz-resize-handles\"]],\n    inputs: {\n      nzDirections: \"nzDirections\"\n    },\n    exportAs: [\"nzResizeHandles\"],\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 0,\n    consts: [[3, \"nzDirection\", \"nzCursorType\"]],\n    template: function NzResizeHandlesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵrepeaterCreate(0, NzResizeHandlesComponent_For_1_Template, 1, 2, \"nz-resize-handle\", 0, i0.ɵɵrepeaterTrackByIdentity);\n      }\n      if (rf & 2) {\n        i0.ɵɵrepeater(ctx.resizeHandleOptions);\n      }\n    },\n    dependencies: [NzResizeHandleComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzResizeHandlesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-resize-handles',\n      exportAs: 'nzResizeHandles',\n      template: `\n    @for (option of resizeHandleOptions; track option) {\n      <nz-resize-handle [nzDirection]=\"option.direction\" [nzCursorType]=\"option.cursorType\" />\n    }\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [NzResizeHandleComponent]\n    }]\n  }], null, {\n    nzDirections: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzResizableModule {\n  static ɵfac = function NzResizableModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzResizableModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NzResizableModule,\n    imports: [NzResizableDirective, NzResizeHandleComponent, NzResizeHandlesComponent],\n    exports: [NzResizableDirective, NzResizeHandleComponent, NzResizeHandlesComponent]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzResizableModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NzResizableDirective, NzResizeHandleComponent, NzResizeHandlesComponent],\n      exports: [NzResizableDirective, NzResizeHandleComponent, NzResizeHandlesComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_RESIZE_DIRECTION, NzResizableDirective, NzResizableModule, NzResizableService, NzResizeHandleComponent, NzResizeHandleMouseDownEvent, NzResizeHandlesComponent, getEventWithPoint };\n", "import { Directionality } from '@angular/cdk/bidi';\nimport { coerceCssPixelValue } from '@angular/cdk/coercion';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { DOCUMENT, NgTemplateOutlet } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { input, output, computed, ChangeDetectionStrategy, ViewEncapsulation, Component, booleanAttribute, viewChild, inject, ElementRef, contentChildren, linkedSignal, signal, NgModule } from '@angular/core';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { map, Subject, merge, takeUntil } from 'rxjs';\nimport { startWith, pairwise } from 'rxjs/operators';\nimport { NzResizeObserver } from 'ng-zorro-antd/cdk/resize-observer';\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport { fromEventOutsideAngular } from 'ng-zorro-antd/core/util';\nimport { getEventWithPoint } from 'ng-zorro-antd/resizable';\nimport * as i1 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst _c0 = [\"nz-splitter-bar\", \"\"];\nfunction NzSplitterBarComponent_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵdeclareLet(0);\n    i0.ɵɵelement(1, \"div\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const preview_r2 = ctx_r0.active() && !!ctx_r0.constrainedOffset();\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"transform\", preview_r2 ? ctx_r0.previewTransform() : null);\n    i0.ɵɵclassProp(\"ant-splitter-bar-preview-active\", preview_r2);\n  }\n}\nfunction NzSplitterBarComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵlistener(\"click\", function NzSplitterBarComponent_Conditional_2_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.collapseEvent(\"start\"));\n    });\n    i0.ɵɵelement(1, \"nz-icon\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"nzType\", ctx_r0.vertical() ? \"up\" : \"left\");\n  }\n}\nfunction NzSplitterBarComponent_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵlistener(\"click\", function NzSplitterBarComponent_Conditional_3_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.collapseEvent(\"end\"));\n    });\n    i0.ɵɵelement(1, \"nz-icon\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"nzType\", ctx_r0.vertical() ? \"down\" : \"right\");\n  }\n}\nconst _c1 = [\"contentTemplate\"];\nconst _c2 = [\"*\"];\nfunction NzSplitterPanelComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nfunction NzSplitterComponent_For_1_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction NzSplitterComponent_For_1_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵdeclareLet(0)(1);\n    i0.ɵɵelementStart(2, \"div\", 4);\n    i0.ɵɵlistener(\"offsetStart\", function NzSplitterComponent_For_1_Conditional_5_Template_div_offsetStart_2_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ɵ$index_1_r2 = i0.ɵɵnextContext().$index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.startResize(ɵ$index_1_r2, $event));\n    })(\"collapse\", function NzSplitterComponent_For_1_Conditional_5_Template_div_collapse_2_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ɵ$index_1_r2 = i0.ɵɵnextContext().$index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.collapse(ɵ$index_1_r2, $event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_23_0;\n    const ɵ$index_1_r2 = i0.ɵɵnextContext().$index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    const resizableInfo_r4 = ctx_r2.resizableInfos()[ɵ$index_1_r2];\n    const ariaInfo_r5 = ctx_r2.ariaInfos()[ɵ$index_1_r2];\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ariaNow\", ariaInfo_r5.ariaNow)(\"ariaMin\", ariaInfo_r5.ariaMin)(\"ariaMax\", ariaInfo_r5.ariaMax)(\"resizable\", resizableInfo_r4.resizable)(\"collapsible\", resizableInfo_r4.collapsible)(\"active\", ((tmp_23_0 = ctx_r2.movingIndex()) == null ? null : tmp_23_0.index) === ɵ$index_1_r2)(\"vertical\", ctx_r2.nzLayout() === \"vertical\")(\"lazy\", ctx_r2.nzLazy())(\"constrainedOffset\", ctx_r2.constrainedOffset());\n  }\n}\nfunction NzSplitterComponent_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵdeclareLet(0)(1)(2);\n    i0.ɵɵelementStart(3, \"div\", 1);\n    i0.ɵɵtemplate(4, NzSplitterComponent_For_1_ng_container_4_Template, 1, 0, \"ng-container\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, NzSplitterComponent_For_1_Conditional_5_Template, 3, 9, \"div\", 3);\n  }\n  if (rf & 2) {\n    const panel_r6 = ctx.$implicit;\n    const ɵ$index_1_r2 = ctx.$index;\n    const ɵ$count_1_r7 = ctx.$count;\n    const size_r8 = i0.ɵɵnextContext().sizes()[ɵ$index_1_r2];\n    const flexBasis_r9 = !!size_r8.size ? size_r8.size : \"auto\";\n    const flexGrow_r10 = !!size_r8.size ? 0 : 1;\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleProp(\"flex-basis\", flexBasis_r9)(\"flex-grow\", flexGrow_r10);\n    i0.ɵɵclassProp(\"ant-splitter-panel-hidden\", size_r8.postPxSize === 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", panel_r6.contentTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(!(ɵ$index_1_r2 === ɵ$count_1_r7 - 1) ? 5 : -1);\n  }\n}\nfunction NzSplitterComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"ant-splitter-mask-horizontal\", ctx_r2.nzLayout() === \"horizontal\")(\"ant-splitter-mask-vertical\", ctx_r2.nzLayout() === \"vertical\");\n  }\n}\nclass NzSplitterBarComponent {\n  ariaNow = input.required();\n  ariaMin = input.required();\n  ariaMax = input.required();\n  active = input(false);\n  resizable = input(true);\n  vertical = input();\n  lazy = input(false);\n  collapsible = input();\n  constrainedOffset = input();\n  offsetStart = output();\n  collapse = output();\n  previewTransform = computed(() => {\n    const offset = coerceCssPixelValue(this.constrainedOffset());\n    return this.vertical() ? `translateY(${offset})` : `translateX(${offset})`;\n  });\n  resizeStartEvent(event) {\n    if (this.resizable()) {\n      const {\n        pageX,\n        pageY\n      } = getEventWithPoint(event);\n      this.offsetStart.emit([pageX, pageY]);\n    }\n  }\n  collapseEvent(type) {\n    this.collapse.emit(type);\n  }\n  getValidNumber(num) {\n    return typeof num === 'number' && !isNaN(num) ? Math.round(num) : 0;\n  }\n  static ɵfac = function NzSplitterBarComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzSplitterBarComponent)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NzSplitterBarComponent,\n    selectors: [[\"\", \"nz-splitter-bar\", \"\"]],\n    hostAttrs: [\"role\", \"separator\", 1, \"ant-splitter-bar\"],\n    hostVars: 3,\n    hostBindings: function NzSplitterBarComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-valuenow\", ctx.getValidNumber(ctx.ariaNow()))(\"aria-valuemin\", ctx.getValidNumber(ctx.ariaMin()))(\"aria-valuemax\", ctx.getValidNumber(ctx.ariaMax()));\n      }\n    },\n    inputs: {\n      ariaNow: [1, \"ariaNow\"],\n      ariaMin: [1, \"ariaMin\"],\n      ariaMax: [1, \"ariaMax\"],\n      active: [1, \"active\"],\n      resizable: [1, \"resizable\"],\n      vertical: [1, \"vertical\"],\n      lazy: [1, \"lazy\"],\n      collapsible: [1, \"collapsible\"],\n      constrainedOffset: [1, \"constrainedOffset\"]\n    },\n    outputs: {\n      offsetStart: \"offsetStart\",\n      collapse: \"collapse\"\n    },\n    attrs: _c0,\n    decls: 4,\n    vars: 7,\n    consts: [[1, \"ant-splitter-bar-preview\", 3, \"ant-splitter-bar-preview-active\", \"transform\"], [1, \"ant-splitter-bar-dragger\", 3, \"mousedown\", \"touchstart\"], [1, \"ant-splitter-bar-collapse-bar\", \"ant-splitter-bar-collapse-bar-start\"], [1, \"ant-splitter-bar-collapse-bar\", \"ant-splitter-bar-collapse-bar-end\"], [1, \"ant-splitter-bar-preview\"], [1, \"ant-splitter-bar-collapse-bar\", \"ant-splitter-bar-collapse-bar-start\", 3, \"click\"], [1, \"ant-splitter-bar-collapse-icon\", \"ant-splitter-bar-collapse-start\", 3, \"nzType\"], [1, \"ant-splitter-bar-collapse-bar\", \"ant-splitter-bar-collapse-bar-end\", 3, \"click\"], [1, \"ant-splitter-bar-collapse-icon\", \"ant-splitter-bar-collapse-end\", 3, \"nzType\"]],\n    template: function NzSplitterBarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NzSplitterBarComponent_Conditional_0_Template, 2, 4, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵlistener(\"mousedown\", function NzSplitterBarComponent_Template_div_mousedown_1_listener($event) {\n          return ctx.resizeStartEvent($event);\n        })(\"touchstart\", function NzSplitterBarComponent_Template_div_touchstart_1_listener($event) {\n          return ctx.resizeStartEvent($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, NzSplitterBarComponent_Conditional_2_Template, 2, 1, \"div\", 2)(3, NzSplitterBarComponent_Conditional_3_Template, 2, 1, \"div\", 3);\n      }\n      if (rf & 2) {\n        let tmp_3_0;\n        let tmp_4_0;\n        i0.ɵɵconditional(ctx.lazy() ? 0 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵclassProp(\"ant-splitter-bar-dragger-disabled\", !ctx.resizable())(\"ant-splitter-bar-dragger-active\", ctx.active());\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(((tmp_3_0 = ctx.collapsible()) == null ? null : tmp_3_0.start) ? 2 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(((tmp_4_0 = ctx.collapsible()) == null ? null : tmp_4_0.end) ? 3 : -1);\n      }\n    },\n    dependencies: [NzIconModule, i1.NzIconDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSplitterBarComponent, [{\n    type: Component,\n    args: [{\n      selector: '[nz-splitter-bar]',\n      imports: [NzIconModule],\n      template: `\n    @if (lazy()) {\n      @let preview = active() && !!this.constrainedOffset();\n      <div\n        class=\"ant-splitter-bar-preview\"\n        [class.ant-splitter-bar-preview-active]=\"preview\"\n        [style.transform]=\"preview ? previewTransform() : null\"\n      ></div>\n    }\n\n    <div\n      class=\"ant-splitter-bar-dragger\"\n      [class.ant-splitter-bar-dragger-disabled]=\"!resizable()\"\n      [class.ant-splitter-bar-dragger-active]=\"active()\"\n      (mousedown)=\"resizeStartEvent($event)\"\n      (touchstart)=\"resizeStartEvent($event)\"\n    ></div>\n\n    @if (collapsible()?.start) {\n      <div class=\"ant-splitter-bar-collapse-bar ant-splitter-bar-collapse-bar-start\" (click)=\"collapseEvent('start')\">\n        <nz-icon\n          [nzType]=\"vertical() ? 'up' : 'left'\"\n          class=\"ant-splitter-bar-collapse-icon ant-splitter-bar-collapse-start\"\n        />\n      </div>\n    }\n\n    @if (collapsible()?.end) {\n      <div class=\"ant-splitter-bar-collapse-bar ant-splitter-bar-collapse-bar-end\" (click)=\"collapseEvent('end')\">\n        <nz-icon\n          [nzType]=\"vertical() ? 'down' : 'right'\"\n          class=\"ant-splitter-bar-collapse-icon ant-splitter-bar-collapse-end\"\n        />\n      </div>\n    }\n  `,\n      host: {\n        role: 'separator',\n        class: 'ant-splitter-bar',\n        '[attr.aria-valuenow]': 'getValidNumber(ariaNow())',\n        '[attr.aria-valuemin]': 'getValidNumber(ariaMin())',\n        '[attr.aria-valuemax]': 'getValidNumber(ariaMax())'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSplitterPanelComponent {\n  nzDefaultSize = input();\n  nzMin = input();\n  nzMax = input();\n  nzSize = input();\n  nzCollapsible = input(false);\n  nzResizable = input(true, {\n    transform: booleanAttribute\n  });\n  contentTemplate = viewChild.required('contentTemplate');\n  static ɵfac = function NzSplitterPanelComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzSplitterPanelComponent)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NzSplitterPanelComponent,\n    selectors: [[\"nz-splitter-panel\"]],\n    viewQuery: function NzSplitterPanelComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuerySignal(ctx.contentTemplate, _c1, 5);\n      }\n      if (rf & 2) {\n        i0.ɵɵqueryAdvance();\n      }\n    },\n    inputs: {\n      nzDefaultSize: [1, \"nzDefaultSize\"],\n      nzMin: [1, \"nzMin\"],\n      nzMax: [1, \"nzMax\"],\n      nzSize: [1, \"nzSize\"],\n      nzCollapsible: [1, \"nzCollapsible\"],\n      nzResizable: [1, \"nzResizable\"]\n    },\n    exportAs: [\"nzSplitterPanel\"],\n    ngContentSelectors: _c2,\n    decls: 2,\n    vars: 0,\n    consts: [[\"contentTemplate\", \"\"]],\n    template: function NzSplitterPanelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, NzSplitterPanelComponent_ng_template_0_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSplitterPanelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-splitter-panel',\n      exportAs: 'nzSplitterPanel',\n      template: `\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/**\n * Get the percentage value of the string. (e.g. '50%' => 0.5)\n * @param str\n */\nfunction getPercentValue(str) {\n  return Number(str.slice(0, -1)) / 100;\n}\n/**\n * Check if the size is percentage.\n * @param size\n */\nfunction isPercent(size) {\n  return typeof size === 'string' && size.endsWith('%');\n}\n/**\n * Coerce the panel collapsible option to the NzSplitterCollapseOption type.\n */\nfunction coerceCollapsible(collapsible) {\n  if (collapsible && typeof collapsible === 'object') {\n    return collapsible;\n  }\n  const mergedCollapsible = !!collapsible;\n  return {\n    start: mergedCollapsible,\n    end: mergedCollapsible\n  };\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true\n});\nclass NzSplitterComponent {\n  /** ------------------- Props ------------------- */\n  nzLayout = input('horizontal');\n  nzLazy = input(false, {\n    transform: booleanAttribute\n  });\n  nzResizeStart = output();\n  nzResize = output();\n  nzResizeEnd = output();\n  destroy$ = inject(NzDestroyService);\n  elementRef = inject(ElementRef);\n  directionality = inject(Directionality);\n  resizeObserver = inject(NzResizeObserver);\n  document = inject(DOCUMENT);\n  dir = toSignal(this.directionality.change, {\n    initialValue: this.directionality.value\n  });\n  /** ------------------- Panels ------------------- */\n  // Get all panels from content children\n  panels = contentChildren(NzSplitterPanelComponent);\n  // Subscribe to the change of properties\n  panelProps = computed(() => this.panels().map(panel => ({\n    defaultSize: panel.nzDefaultSize(),\n    size: panel.nzSize(),\n    min: panel.nzMin(),\n    max: panel.nzMax(),\n    resizable: panel.nzResizable(),\n    collapsible: coerceCollapsible(panel.nzCollapsible()),\n    contentTemplate: panel.contentTemplate()\n  })));\n  /** ------------------- Sizes ------------------- */\n  /**\n   * Observe the size of the container.\n   */\n  containerBox = toSignal(this.resizeObserver.observe(this.elementRef).pipe(map(([item]) => item.target), map(el => ({\n    width: el.clientWidth,\n    height: el.clientHeight\n  }))), {\n    initialValue: {\n      width: this.elementRef.nativeElement.clientWidth || 0,\n      height: this.elementRef.nativeElement.clientHeight || 0\n    }\n  });\n  /**\n   * The size of the container, used to calculate the percentage size and flex basis of each panel.\n   */\n  containerSize = computed(() => this.nzLayout() === 'horizontal' ? this.containerBox().width : this.containerBox().height);\n  /**\n   * Derived from defaultSize of each panel.\n   * After that it will be updated by the resize event with **real** size in pixels.\n   */\n  innerSizes = linkedSignal({\n    source: this.panelProps,\n    computation: source => source.map(panel => panel.defaultSize)\n  });\n  /**\n   * Calculate the size of each panel based on the container size and the percentage size.\n   */\n  sizes = computed(() => {\n    let emptyCount = 0;\n    const containerSize = this.containerSize();\n    const innerSizes = this.innerSizes();\n    /**\n     * Get the calculated size, min and max percentage of each panel\n     */\n    const sizes = this.panelProps().map((panel, index) => {\n      const size = panel.size ?? innerSizes[index];\n      // Calculate the percentage size of each panel.\n      let percentage;\n      if (isPercent(size)) {\n        percentage = getPercentValue(size);\n      } else if (size || size === 0) {\n        const num = Number(size);\n        if (!isNaN(num)) {\n          percentage = num / containerSize;\n        }\n      } else {\n        percentage = undefined;\n        emptyCount++;\n      }\n      // Calculate the min and max percentage size of each panel.\n      const minSize = panel.min;\n      const maxSize = panel.max;\n      const postPercentMinSize = isPercent(minSize) ? getPercentValue(minSize) : (minSize || 0) / containerSize;\n      const postPercentMaxSize = isPercent(maxSize) ? getPercentValue(maxSize) : (maxSize || containerSize) / containerSize;\n      return {\n        size,\n        percentage,\n        min: minSize,\n        max: maxSize,\n        postPercentMinSize,\n        postPercentMaxSize\n      };\n    });\n    /**\n     * Normalize the percentage size of each panel if the total percentage is larger than 1 or smaller than 1.\n     */\n    const totalPercentage = sizes.reduce((acc, {\n      percentage\n    }) => acc + (percentage ?? 0), 0);\n    for (const size of sizes) {\n      if (totalPercentage > 1 && !emptyCount) {\n        // If total percentage is larger than 1, we will scale it down.\n        const scale = 1 / totalPercentage;\n        size.percentage = size.percentage === undefined ? 0 : size.percentage * scale;\n      } else {\n        // If total percentage is smaller than 1, we will fill the rest.\n        const averagePercentage = (1 - totalPercentage) / emptyCount;\n        size.percentage = size.percentage === undefined ? averagePercentage : size.percentage;\n      }\n      size.postPxSize = size.percentage * containerSize;\n      size.size = containerSize ? coerceCssPixelValue(size.postPxSize) : size.size;\n    }\n    return sizes;\n  });\n  ariaInfos = computed(() => {\n    const stackSizes = [];\n    const ariaInfos = [];\n    const sizes = this.sizes();\n    let stack = 0;\n    for (const size of sizes) {\n      stack += size.percentage;\n      stackSizes.push(stack);\n    }\n    for (let i = 0; i < sizes.length - 1; i += 1) {\n      const ariaMinStart = (stackSizes[i - 1] || 0) + sizes[i].postPercentMinSize;\n      const ariaMinEnd = (stackSizes[i + 1] || 100) - sizes[i + 1].postPercentMaxSize;\n      const ariaMaxStart = (stackSizes[i - 1] || 0) + sizes[i].postPercentMaxSize;\n      const ariaMaxEnd = (stackSizes[i + 1] || 100) - sizes[i + 1].postPercentMinSize;\n      ariaInfos.push({\n        ariaNow: stackSizes[i] * 100,\n        ariaMin: Math.max(ariaMinStart, ariaMinEnd) * 100,\n        ariaMax: Math.min(ariaMaxStart, ariaMaxEnd) * 100\n      });\n    }\n    return ariaInfos;\n  });\n  getPxSizes() {\n    return this.sizes().map(s => s.postPxSize);\n  }\n  /** ------------------ Resize ------------------ */\n  /**\n   * The index of the panel that is being resized.\n   * @note Mark the moving splitter bar as activated to show the dragging effect even if the mouse is outside the\n   * splitter container.\n   */\n  movingIndex = signal(null);\n  /**\n   * The offset of preview position (lazy mode) when dragging the splitter bar.\n   * Constrained by the min and max size of the target panel.\n   */\n  constrainedOffset = signal(0);\n  /**\n   * The resizable information of each splitter bar.\n   */\n  resizableInfos = computed(() => {\n    const items = this.panelProps();\n    const pxSizes = this.getPxSizes();\n    const resizeInfos = [];\n    for (let i = 0; i < items.length - 1; i += 1) {\n      const prevItem = items[i];\n      const nextItem = items[i + 1];\n      const prevSize = pxSizes[i];\n      const nextSize = pxSizes[i + 1];\n      const {\n        resizable: prevResizable = true,\n        min: prevMin,\n        collapsible: prevCollapsible\n      } = prevItem;\n      const {\n        resizable: nextResizable = true,\n        min: nextMin,\n        collapsible: nextCollapsible\n      } = nextItem;\n      const mergedResizable =\n      // Both need to be resizable\n      prevResizable && nextResizable && (\n      // Prev is not collapsed and limit min size\n      prevSize !== 0 || !prevMin) && (\n      // Next is not collapsed and limit min size\n      nextSize !== 0 || !nextMin);\n      const startCollapsible =\n      // Self is collapsible\n      prevCollapsible.end && prevSize > 0 ||\n      // Collapsed and can be collapsed\n      nextCollapsible.start && nextSize === 0 && prevSize > 0;\n      const endCollapsible =\n      // Self is collapsible\n      nextCollapsible.start && nextSize > 0 ||\n      // Collapsed and can be collapsed\n      prevCollapsible.end && prevSize === 0 && nextSize > 0;\n      resizeInfos[i] = {\n        resizable: mergedResizable,\n        collapsible: {\n          start: !!(this.dir() === 'rtl' ? endCollapsible : startCollapsible),\n          end: !!(this.dir() === 'rtl' ? startCollapsible : endCollapsible)\n        }\n      };\n    }\n    return resizeInfos;\n  });\n  /**\n   * Handle the resize start event for the specified panel.\n   * @param index The index of the panel.\n   * @param startPos The start position of the resize event.\n   */\n  startResize(index, startPos) {\n    this.movingIndex.set({\n      index,\n      confirmed: false\n    });\n    this.nzResizeStart.emit(this.getPxSizes());\n    const end$ = new Subject();\n    // Updated constraint calculation\n    const getConstrainedOffset = rawOffset => {\n      const {\n        percentage,\n        postPercentMinSize,\n        postPercentMaxSize\n      } = this.sizes()[index];\n      const [ariaNow, ariaMin, ariaMax] = [percentage, postPercentMinSize, postPercentMaxSize].map(p => p * 100);\n      const containerSize = this.containerSize();\n      const currentPos = containerSize * ariaNow / 100;\n      const newPos = currentPos + rawOffset;\n      // Calculate available space\n      const minAllowed = Math.max(0, containerSize * ariaMin / 100);\n      const maxAllowed = Math.min(containerSize, containerSize * ariaMax / 100);\n      // Constrain new position within bounds\n      const clampedPos = Math.max(minAllowed, Math.min(maxAllowed, newPos));\n      return clampedPos - currentPos;\n    };\n    const handleLazyMove = offset => {\n      this.constrainedOffset.set(getConstrainedOffset(offset));\n    };\n    const handleLazyEnd = () => {\n      this.updateOffset(index, this.constrainedOffset());\n      this.constrainedOffset.set(0);\n    };\n    // resizing\n    merge(fromEventOutsideAngular(this.document, 'mousemove', passiveEventListenerOptions), fromEventOutsideAngular(this.document, 'touchmove', passiveEventListenerOptions)).pipe(map(event => getEventWithPoint(event)), map(({\n      pageX,\n      pageY\n    }) => this.nzLayout() === 'horizontal' ? pageX - startPos[0] : pageY - startPos[1]),\n    // flip the offset if the direction is rtl\n    map(offset => this.nzLayout() === 'horizontal' && this.dir() === 'rtl' ? -offset : offset), startWith(0), pairwise(), takeUntil(merge(end$, this.destroy$))).subscribe(([prev, next]) => {\n      if (this.nzLazy() && next !== 0) {\n        handleLazyMove(next);\n      } else {\n        const deltaOffset = next - prev;\n        // filter out the 0 delta offset\n        if (deltaOffset !== 0) {\n          this.updateOffset(index, deltaOffset);\n        }\n      }\n    });\n    // resize end\n    merge(fromEventOutsideAngular(this.document, 'mouseup'), fromEventOutsideAngular(this.document, 'touchend')).pipe(takeUntil(merge(end$, this.destroy$))).subscribe(() => {\n      if (this.nzLazy()) {\n        handleLazyEnd();\n      }\n      this.movingIndex.set(null);\n      this.nzResizeEnd.emit(this.getPxSizes());\n      end$.next();\n    });\n  }\n  /**\n   * Update the sizes of specified panels based on the move offset.\n   * @param index The index of the panel.\n   * @param offset The move offset in pixels.\n   */\n  updateOffset(index, offset) {\n    const containerSize = this.containerSize();\n    const limitSizes = this.sizes().map(p => [p.min, p.max]);\n    const pxSizes = this.sizes().map(p => p.percentage * containerSize);\n    const getLimitSize = (size, defaultLimit) => {\n      if (typeof size === 'string') {\n        return getPercentValue(size) * containerSize;\n      }\n      return size ?? defaultLimit;\n    };\n    // First time trigger move index update is not sync in the state\n    let confirmedIndex = null;\n    const movingIndex = this.movingIndex();\n    // we need to know what the real index is\n    if ((!movingIndex || !movingIndex.confirmed) && offset !== 0) {\n      // search for the real index\n      if (offset > 0) {\n        confirmedIndex = index;\n        this.movingIndex.set({\n          index,\n          confirmed: true\n        });\n      } else {\n        for (let i = index; i >= 0; i -= 1) {\n          if (pxSizes[i] > 0 && this.resizableInfos()[i].resizable) {\n            confirmedIndex = i;\n            this.movingIndex.set({\n              index: i,\n              confirmed: true\n            });\n            break;\n          }\n        }\n      }\n    }\n    const mergedIndex = confirmedIndex ?? index;\n    const nextIndex = mergedIndex + 1;\n    // Get boundary\n    const startMinSize = getLimitSize(limitSizes[mergedIndex][0], 0);\n    const endMinSize = getLimitSize(limitSizes[nextIndex][0], 0);\n    const startMaxSize = getLimitSize(limitSizes[mergedIndex][1], containerSize);\n    const endMaxSize = getLimitSize(limitSizes[nextIndex][1], containerSize);\n    let mergedOffset = offset;\n    // Align with the boundary\n    if (pxSizes[mergedIndex] + mergedOffset < startMinSize) {\n      mergedOffset = startMinSize - pxSizes[mergedIndex];\n    }\n    if (pxSizes[nextIndex] - mergedOffset < endMinSize) {\n      mergedOffset = pxSizes[nextIndex] - endMinSize;\n    }\n    if (pxSizes[mergedIndex] + mergedOffset > startMaxSize) {\n      mergedOffset = startMaxSize - pxSizes[mergedIndex];\n    }\n    if (pxSizes[nextIndex] - mergedOffset > endMaxSize) {\n      mergedOffset = pxSizes[nextIndex] - endMaxSize;\n    }\n    // Do offset\n    pxSizes[mergedIndex] += mergedOffset;\n    pxSizes[nextIndex] -= mergedOffset;\n    this.innerSizes.set(pxSizes);\n    this.nzResize.emit(pxSizes);\n  }\n  /** ------------------ Resize ------------------ */\n  /**\n   * Record the original size of the collapsed panel.\n   * Used to restore the size when the panel is expanded back.\n   */\n  cacheCollapsedSize = [];\n  /**\n   * Collapse the specified panel.\n   * @param index The index of the panel to collapse.\n   * @param type The type of collapse, either `start` or `end`.\n   */\n  collapse(index, type) {\n    const containerSize = this.containerSize();\n    const limitSizes = this.sizes().map(p => [p.min, p.max]);\n    const currentSizes = this.sizes().map(p => p.percentage * containerSize);\n    const adjustedType = this.dir() === 'rtl' ? type === 'start' ? 'end' : 'start' : type;\n    const currentIndex = adjustedType === 'start' ? index : index + 1;\n    const targetIndex = adjustedType == 'start' ? index + 1 : index;\n    const currentSize = currentSizes[currentIndex];\n    const targetSize = currentSizes[targetIndex];\n    const getLimitSize = (size, defaultLimit) => {\n      if (typeof size === 'string') {\n        return getPercentValue(size) * containerSize;\n      }\n      return size ?? defaultLimit;\n    };\n    if (currentSize !== 0 && targetSize !== 0) {\n      // Collapse directly\n      currentSizes[currentIndex] = 0;\n      currentSizes[targetIndex] += currentSize;\n      this.cacheCollapsedSize[index] = currentSize;\n    } else {\n      const totalSize = currentSize + targetSize;\n      const currentSizeMin = getLimitSize(limitSizes[currentIndex][0], 0);\n      const currentSizeMax = getLimitSize(limitSizes[currentIndex][1], containerSize);\n      const targetSizeMin = getLimitSize(limitSizes[targetIndex][0], 0);\n      const targetSizeMax = getLimitSize(limitSizes[targetIndex][1], containerSize);\n      const limitStart = Math.max(currentSizeMin, totalSize - targetSizeMax);\n      const limitEnd = Math.min(currentSizeMax, totalSize - targetSizeMin);\n      const halfOffset = (limitEnd - limitStart) / 2;\n      const targetCacheCollapsedSize = this.cacheCollapsedSize[index];\n      const currentCacheCollapsedSize = totalSize - targetCacheCollapsedSize;\n      const shouldUseCache = targetCacheCollapsedSize && targetCacheCollapsedSize <= targetSizeMax && targetCacheCollapsedSize >= targetSizeMin && currentCacheCollapsedSize <= currentSizeMax && currentCacheCollapsedSize >= currentSizeMin;\n      if (shouldUseCache) {\n        currentSizes[targetIndex] = targetCacheCollapsedSize;\n        currentSizes[currentIndex] = currentCacheCollapsedSize;\n      } else {\n        currentSizes[currentIndex] -= halfOffset;\n        currentSizes[targetIndex] += halfOffset;\n      }\n    }\n    this.innerSizes.set(currentSizes);\n    this.nzResize.emit(currentSizes);\n    this.nzResizeEnd.emit(currentSizes);\n  }\n  static ɵfac = function NzSplitterComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzSplitterComponent)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NzSplitterComponent,\n    selectors: [[\"nz-splitter\"]],\n    contentQueries: function NzSplitterComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuerySignal(dirIndex, ctx.panels, NzSplitterPanelComponent, 4);\n      }\n      if (rf & 2) {\n        i0.ɵɵqueryAdvance();\n      }\n    },\n    hostAttrs: [1, \"ant-splitter\"],\n    hostVars: 6,\n    hostBindings: function NzSplitterComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"ant-splitter-horizontal\", ctx.nzLayout() === \"horizontal\")(\"ant-splitter-vertical\", ctx.nzLayout() === \"vertical\")(\"ant-splitter-rtl\", ctx.dir() === \"rtl\");\n      }\n    },\n    inputs: {\n      nzLayout: [1, \"nzLayout\"],\n      nzLazy: [1, \"nzLazy\"]\n    },\n    outputs: {\n      nzResizeStart: \"nzResizeStart\",\n      nzResize: \"nzResize\",\n      nzResizeEnd: \"nzResizeEnd\"\n    },\n    exportAs: [\"nzSplitter\"],\n    features: [i0.ɵɵProvidersFeature([NzDestroyService])],\n    decls: 3,\n    vars: 1,\n    consts: [[\"aria-hidden\", \"\", 1, \"ant-splitter-mask\", 3, \"ant-splitter-mask-horizontal\", \"ant-splitter-mask-vertical\"], [1, \"ant-splitter-panel\"], [4, \"ngTemplateOutlet\"], [\"nz-splitter-bar\", \"\", 3, \"ariaNow\", \"ariaMin\", \"ariaMax\", \"resizable\", \"collapsible\", \"active\", \"vertical\", \"lazy\", \"constrainedOffset\"], [\"nz-splitter-bar\", \"\", 3, \"offsetStart\", \"collapse\", \"ariaNow\", \"ariaMin\", \"ariaMax\", \"resizable\", \"collapsible\", \"active\", \"vertical\", \"lazy\", \"constrainedOffset\"], [\"aria-hidden\", \"\", 1, \"ant-splitter-mask\"]],\n    template: function NzSplitterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵrepeaterCreate(0, NzSplitterComponent_For_1_Template, 6, 8, null, null, i0.ɵɵrepeaterTrackByIndex);\n        i0.ɵɵtemplate(2, NzSplitterComponent_Conditional_2_Template, 1, 4, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵrepeater(ctx.panelProps());\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(ctx.movingIndex() !== null ? 2 : -1);\n      }\n    },\n    dependencies: [NgTemplateOutlet, NzSplitterBarComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSplitterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-splitter',\n      exportAs: 'nzSplitter',\n      template: `\n    @for (panel of panelProps(); let i = $index; track i; let last = $last) {\n      @let size = sizes()[i];\n      @let flexBasis = !!size.size ? size.size : 'auto';\n      @let flexGrow = !!size.size ? 0 : 1;\n      <div\n        class=\"ant-splitter-panel\"\n        [class.ant-splitter-panel-hidden]=\"size.postPxSize === 0\"\n        [style.flex-basis]=\"flexBasis\"\n        [style.flex-grow]=\"flexGrow\"\n      >\n        <ng-container *ngTemplateOutlet=\"panel.contentTemplate\"></ng-container>\n      </div>\n\n      @if (!last) {\n        @let resizableInfo = resizableInfos()[i];\n        @let ariaInfo = ariaInfos()[i];\n        <div\n          nz-splitter-bar\n          [ariaNow]=\"ariaInfo.ariaNow\"\n          [ariaMin]=\"ariaInfo.ariaMin\"\n          [ariaMax]=\"ariaInfo.ariaMax\"\n          [resizable]=\"resizableInfo.resizable\"\n          [collapsible]=\"resizableInfo.collapsible\"\n          [active]=\"movingIndex()?.index === i\"\n          [vertical]=\"nzLayout() === 'vertical'\"\n          [lazy]=\"nzLazy()\"\n          [constrainedOffset]=\"constrainedOffset()\"\n          (offsetStart)=\"startResize(i, $event)\"\n          (collapse)=\"collapse(i, $event)\"\n        ></div>\n      }\n    }\n\n    <!-- Fake mask for cursor -->\n    @if (movingIndex() !== null) {\n      <div\n        aria-hidden\n        class=\"ant-splitter-mask\"\n        [class.ant-splitter-mask-horizontal]=\"nzLayout() === 'horizontal'\"\n        [class.ant-splitter-mask-vertical]=\"nzLayout() === 'vertical'\"\n      ></div>\n    }\n  `,\n      imports: [NgTemplateOutlet, NzSplitterBarComponent],\n      providers: [NzDestroyService],\n      host: {\n        class: 'ant-splitter',\n        '[class.ant-splitter-horizontal]': 'nzLayout() === \"horizontal\"',\n        '[class.ant-splitter-vertical]': 'nzLayout() === \"vertical\"',\n        '[class.ant-splitter-rtl]': 'dir() === \"rtl\"'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSplitterModule {\n  static ɵfac = function NzSplitterModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzSplitterModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NzSplitterModule,\n    imports: [NzSplitterComponent, NzSplitterPanelComponent],\n    exports: [NzSplitterComponent, NzSplitterPanelComponent]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [NzSplitterComponent]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSplitterModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NzSplitterComponent, NzSplitterPanelComponent],\n      exports: [NzSplitterComponent, NzSplitterPanelComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzSplitterComponent, NzSplitterModule, NzSplitterPanelComponent };\n"],
  "mappings": "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",
  "names": ["_c0", "passiveEventListenerOptions"]
}
